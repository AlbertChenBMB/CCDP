summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm6,x28_1)
train<-select(data5,x16_dm2:x16_dm6,x28_1)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
cart.model
cart.model
cart.model
cart.model
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.05,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
train<-select(data5,x14_dm1:x14_dm6,x28_1)
#train<-select(data5,x16_dm2:x16_dm6,x28_1)
# train<-select(data5,x17_dm1:x17_dm6,x28_1)
# train<-select(data5,x18_dm1:x18_dm6,x28_1)
# train<-select(data5,x25_dm1:x25_dm6,x28_1)
# train<-select(data5,x26_dm1:x26_dm6,x28_1)
# train<-select(data5,x27_dm1:x27_dm6,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.05,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
train<-select(data5,x14_dm1:x14_dm6,x28_1)
#train<-select(data5,x16_dm2:x16_dm6,x28_1)
# train<-select(data5,x17_dm1:x17_dm6,x28_1)
# train<-select(data5,x18_dm1:x18_dm6,x28_1)
# train<-select(data5,x25_dm1:x25_dm6,x28_1)
# train<-select(data5,x26_dm1:x26_dm6,x28_1)
# train<-select(data5,x27_dm1:x27_dm6,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.015,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm6,x28_1)
#train<-select(data5,x16_dm2:x16_dm6,x28_1)
train<-select(data5,x17_dm1:x17_dm6,x28_1)
# train<-select(data5,x18_dm1:x18_dm6,x28_1)
# train<-select(data5,x25_dm1:x25_dm6,x28_1)
# train<-select(data5,x26_dm1:x26_dm6,x28_1)
# train<-select(data5,x27_dm1:x27_dm6,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.015,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
train<-select(data5,x17_dm1:x17_dm3,x28_1)
# train<-select(data5,x18_dm1:x18_dm3,x28_1)
# train<-select(data5,x25_dm1:x25_dm3,x28_1)
# train<-select(data5,x26_dm1:x26_dm3,x28_1)
# train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
# train<-select(data5,x17_dm1:x17_dm3,x28_1)
train<-select(data5,x18_dm1:x18_dm3,x28_1)
# train<-select(data5,x25_dm1:x25_dm3,x28_1)
# train<-select(data5,x26_dm1:x26_dm3,x28_1)
# train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
# train<-select(data5,x17_dm1:x17_dm3,x28_1)
# train<-select(data5,x18_dm1:x18_dm3,x28_1)
train<-select(data5,x25_dm1:x25_dm3,x28_1)
# train<-select(data5,x26_dm1:x26_dm3,x28_1)
# train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
# train<-select(data5,x17_dm1:x17_dm3,x28_1)
# train<-select(data5,x18_dm1:x18_dm3,x28_1)
# train<-select(data5,x25_dm1:x25_dm3,x28_1)
train<-select(data5,x26_dm1:x26_dm3,x28_1)
# train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
#train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
# train<-select(data5,x17_dm1:x17_dm3,x28_1)
# train<-select(data5,x18_dm1:x18_dm3,x28_1)
# train<-select(data5,x25_dm1:x25_dm3,x28_1)
# train<-select(data5,x26_dm1:x26_dm3,x28_1)
train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
require(rpart)
set.seed(123)
train<-select(data5,x14_dm1:x14_dm3,x28_1)
#train<-select(data5,x16_dm2:x16_dm3,x28_1)
# train<-select(data5,x17_dm1:x17_dm3,x28_1)
# train<-select(data5,x18_dm1:x18_dm3,x28_1)
# train<-select(data5,x25_dm1:x25_dm3,x28_1)
# train<-select(data5,x26_dm1:x26_dm3,x28_1)
# train<-select(data5,x27_dm1:x27_dm3,x28_1)
#train<-mutate(train,x14_avg=(x14_dm1+x14_dm2+x14_dm3+x14_dm4+x14_dm5+x14_dm6)/6)
train$x28_1 = factor(train$x28_1,
levels= c("5","4",
"3","2",
"1","0"),
labels=c(1,1,0,0,0,0))
fp_data<-filter(train,x28_1==0)
#考慮正常樣本如果太多,新增條件
df_data<-filter(train,x28_1==1)
ratio<-round(nrow(df_data)/nrow(fp_data),digits = 2)
#隨機分布
set.seed(1235)
#組合全部的df_data和比例的fp_data
split = sample.split(fp_data$x28_1, SplitRatio = ratio)
bind1 = subset(fp_data, split == TRUE)
train<-rbind(bind1,df_data)
train$x28_1<-as.factor(train$x28_1)
cart.model<-rpart(x28_1~.,
data=train,
control = rpart.control(cp=0.005,maxcompete = 3))
summary(cart.model)
plot(cart.model)
require(rpart.plot)
prp(cart.model,
faclen=0, #變數不縮寫
fallen.leaves=TRUE,#樹枝呈現方式
shadow.col="gray")
edit(rpart.plot)
edit(prp)
quantile(all_data,x28_1)
quantile(na.omit(all_data),x28_1)
quantile(na.omit(all_data),x14_dm1)
?quantile
?cart
?rpart
?options
library(swirl)
swirl()
1-((2+1)/36)
deck
52
4/52
0
12/52
3/51
2/51
swirl()
0.8*1.6/2
0.64
mypdf()
mypdf
integer(mypdf(1.6))
integrate(mypdf,0,1.6)
0.32
sqrt(2)
0.997*0.001
(1-0.997)*(1-0.001)
0.997*0.985
0.985*0.01
0.985*(1-0.01)
0.997*0.001*0.985
0.985*0.001
0.985*(1-0.001)
??
(1-0.985)*(1-0.001)
(0.997*0.001)/((0.997*0.001)+((1-0.985)*(1-0.001)))
x<-c(2,3,5)
class(x)
as.factor(x)
x<-as.factor(x)
as.numeric(x)
x
class(x)
x<-as.numeric(x)
x
x<-c(2,3,5)
x<-as.character(x)
x
x<-as.numeric(x)
x
install.packages("stringr")
library(stringr)
x<-"how are you?"
x
x<-"   how are you?"
str_replace_all(x)
str_replace_all(x,fixed(" "),"")
library(readr)
?read_csv
x<-"   how ./\are __you?"
str_replace_all(x,fixed(" "),"")
str_replace_all(x,fixed("_"),"")
str_replace_all(x,fixed("_")," ")
str_replace_all(x,fixed("\"),"")
)
data.frame(c(ID,score,stime))
data.frame(c("ID","score","stime"))
ID<-c(1,2,3,4,5)
score<-c(5,10,2,9,11)
stime<-c("100,150,5,100,150")
stime<-c("100","150","5","100","150")
data.frame(ID,score,stime)
first_t<-data.frame(ID,score,stime)
ID_2<-c(1,2,3,5)
score_2<-c(5,2,9,11)
stime<-c(10,10,5,6)
secorn_t<-data.frame(ID_2,score_2,stime)
rbind(first_t,secorn_t)
ID<-c(1,2,3,5)
secorn_t<-data.frame(ID,score_2,stime)
merge(first_t,secorn_t,by="ID")
2*2
3*2
3**2
3^2
9^9
9**9
summary(data5$x05)
library(dplyr)
group_by(data5)%>%summarise(summary(x14_dm1))
group_by(data5)%>%summarise(mean(x14_dm1))
group_by(data5,x28_1)%>%summarise(mean(x14_dm1))
group_by(data5,x28_1)%>%summarise(summary(x14_dm1))
group_by(data5,x28_1)%>%summarise(mean(x14_dm1),median(x14_dm1))
?summary
quantile(data5$x14_dm1)
group_by(data5,x28_1)%>%summarise(mean(x14_dm1),quantile(x14_dm1))
?quantile
quantile(data5$x14_dm1,probs = 50%)
quantile(data5$x14_dm1,probs = 0.5)
group_by(data5,x28_1)%>%summarise(mean(x14_dm1),quantile(x14_dm1,0.5))
View(all_data)
?summarise
options(999)
options(9999)
options(99)
options(99999)
data5$x05
setwd("C:/Users/User/CCDP")
library(readr)
ttt<-read_csv("EDA_data.csv")
summary(ttt)
rm(ttt)
